version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: paylink-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: paylink_user
      POSTGRES_PASSWORD: paylink_password
      POSTGRES_DB: paylink_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U paylink_user -d paylink_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paylink-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: paylink-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paylink-network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: paylink-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://paylink_user:paylink_password@postgres:5432/paylink_db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/venv  # Exclude venv from bind mount
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - paylink-network
    command: >
      sh -c "
        prisma generate &&
        prisma migrate deploy &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: paylink-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Exclude node_modules from bind mount
    depends_on:
      - backend
    networks:
      - paylink-network

volumes:
  postgres_data:
  redis_data:

networks:
  paylink-network:
    driver: bridge
